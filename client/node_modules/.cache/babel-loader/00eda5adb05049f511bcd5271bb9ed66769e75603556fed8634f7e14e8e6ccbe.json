{"ast":null,"code":"import{APP_CONFIG}from'../config/app-config';export class RewardService{static calculateDailyReward(user,adViews){const baseReward=APP_CONFIG.BASE_REWARD;// Tính multiplier từ quảng cáo\nconst todayAdViews=adViews.filter(view=>view.date.toDateString()===new Date().toDateString());const adMultiplier=Math.min(1+todayAdViews.length*APP_CONFIG.AD_REWARD_MULTIPLIER,APP_CONFIG.MAX_AD_MULTIPLIER);// Tính multiplier từ referrals\nconst referralMultiplier=Math.min(user.referralMultiplier,APP_CONFIG.MAX_REFERRAL_MULTIPLIER);// Tính tổng phần thưởng\nconst finalReward=baseReward*adMultiplier*referralMultiplier;return Number(finalReward.toFixed(4));// Làm tròn đến 4 chữ số thập phân\n}static isEligibleForDailyReward(lastClaimTime){if(!lastClaimTime)return true;const now=new Date().getTime();const lastClaim=lastClaimTime.getTime();const timeDiff=now-lastClaim;return timeDiff>=APP_CONFIG.DAILY_REWARD_COOLDOWN;}static getTimeUntilNextReward(lastClaimTime){if(!lastClaimTime)return 0;const now=new Date().getTime();const lastClaim=lastClaimTime.getTime();const nextClaim=lastClaim+APP_CONFIG.DAILY_REWARD_COOLDOWN;const timeLeft=nextClaim-now;return Math.max(0,timeLeft);}static formatTimeLeft(milliseconds){const hours=Math.floor(milliseconds/(1000*60*60));const minutes=Math.floor(milliseconds%(1000*60*60)/(1000*60));const seconds=Math.floor(milliseconds%(1000*60)/1000);return\"\".concat(hours.toString().padStart(2,'0'),\":\").concat(minutes.toString().padStart(2,'0'),\":\").concat(seconds.toString().padStart(2,'0'));}static calculateReferralMultiplier(referralCount){const multiplierPerReferral=APP_CONFIG.REF_REWARD_MULTIPLIER;const maxMultiplier=APP_CONFIG.MAX_REFERRAL_MULTIPLIER;const calculatedMultiplier=1+referralCount*multiplierPerReferral;return Math.min(calculatedMultiplier,maxMultiplier);}}","map":{"version":3,"names":["APP_CONFIG","RewardService","calculateDailyReward","user","adViews","baseReward","BASE_REWARD","todayAdViews","filter","view","date","toDateString","Date","adMultiplier","Math","min","length","AD_REWARD_MULTIPLIER","MAX_AD_MULTIPLIER","referralMultiplier","MAX_REFERRAL_MULTIPLIER","finalReward","Number","toFixed","isEligibleForDailyReward","lastClaimTime","now","getTime","lastClaim","timeDiff","DAILY_REWARD_COOLDOWN","getTimeUntilNextReward","nextClaim","timeLeft","max","formatTimeLeft","milliseconds","hours","floor","minutes","seconds","concat","toString","padStart","calculateReferralMultiplier","referralCount","multiplierPerReferral","REF_REWARD_MULTIPLIER","maxMultiplier","calculatedMultiplier"],"sources":["D:/tree/client/src/services/RewardService.ts"],"sourcesContent":["import { APP_CONFIG } from '../config/app-config';\r\nimport { User, AdView } from '../types';\r\n\r\nexport class RewardService {\r\n  static calculateDailyReward(user: User, adViews: AdView[]): number {\r\n    const baseReward = APP_CONFIG.BASE_REWARD;\r\n    \r\n    // Tính multiplier từ quảng cáo\r\n    const todayAdViews = adViews.filter(view => \r\n      view.date.toDateString() === new Date().toDateString()\r\n    );\r\n    const adMultiplier = Math.min(\r\n      1 + (todayAdViews.length * APP_CONFIG.AD_REWARD_MULTIPLIER),\r\n      APP_CONFIG.MAX_AD_MULTIPLIER\r\n    );\r\n\r\n    // Tính multiplier từ referrals\r\n    const referralMultiplier = Math.min(\r\n      user.referralMultiplier,\r\n      APP_CONFIG.MAX_REFERRAL_MULTIPLIER\r\n    );\r\n\r\n    // Tính tổng phần thưởng\r\n    const finalReward = baseReward * adMultiplier * referralMultiplier;\r\n\r\n    return Number(finalReward.toFixed(4)); // Làm tròn đến 4 chữ số thập phân\r\n  }\r\n\r\n  static isEligibleForDailyReward(lastClaimTime?: Date): boolean {\r\n    if (!lastClaimTime) return true;\r\n\r\n    const now = new Date().getTime();\r\n    const lastClaim = lastClaimTime.getTime();\r\n    const timeDiff = now - lastClaim;\r\n\r\n    return timeDiff >= APP_CONFIG.DAILY_REWARD_COOLDOWN;\r\n  }\r\n\r\n  static getTimeUntilNextReward(lastClaimTime?: Date): number {\r\n    if (!lastClaimTime) return 0;\r\n\r\n    const now = new Date().getTime();\r\n    const lastClaim = lastClaimTime.getTime();\r\n    const nextClaim = lastClaim + APP_CONFIG.DAILY_REWARD_COOLDOWN;\r\n    const timeLeft = nextClaim - now;\r\n\r\n    return Math.max(0, timeLeft);\r\n  }\r\n\r\n  static formatTimeLeft(milliseconds: number): string {\r\n    const hours = Math.floor(milliseconds / (1000 * 60 * 60));\r\n    const minutes = Math.floor((milliseconds % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((milliseconds % (1000 * 60)) / 1000);\r\n\r\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n  }\r\n\r\n  static calculateReferralMultiplier(referralCount: number): number {\r\n    const multiplierPerReferral = APP_CONFIG.REF_REWARD_MULTIPLIER;\r\n    const maxMultiplier = APP_CONFIG.MAX_REFERRAL_MULTIPLIER;\r\n    const calculatedMultiplier = 1 + (referralCount * multiplierPerReferral);\r\n    \r\n    return Math.min(calculatedMultiplier, maxMultiplier);\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}